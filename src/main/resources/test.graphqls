
scalar DateTime

input DateTimeFilter {
  eq: DateTime
  le: DateTime
  lt: DateTime
  ge: DateTime
  gt: DateTime
}

type DEntry {
  id: ID!
  type: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  license: String
  source: String
  sourceUrl: String
  sourceId: String
  translationExcerpt: String
}

input DEntryFilter {
  id: [ID!]
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeFilter
  and: DEntryFilter
  or: DEntryFilter
  not: DEntryFilter
}

type Subscription {
  getDEntry(id: ID!): DEntry
  queryDEntry(filter: DEntryFilter): [DEntry]
}
